<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <springProperty scope="context" name="LOG_FOLDER" source="application.log.folder"/>
    <springProperty scope="context" name="LOG_KAFKA_SERVERS" source="application.log.kafka.bootstrap.servers"/>
    <springProperty scope="context" name="LOG_KAFKA_TOPIC" source="application.log.kafka.topic"/>
    <springProperty scope="context" name="LOG_KAFKA_SERVERS" source="application.log.kafka.bootstrap.servers"/>
    <springProperty scope="context" name="LOG_KAFKA_TOPIC" source="application.log.kafka.topic"/>

    <property name="LOG_FILE" value="${LOG_FOLDER}${springAppName}"/>

<!--    <property name="LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%X{EagleEye-TraceID})-->
<!--              %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan}-->
<!--              %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{EagleEye-TraceID}] [%thread] %logger{50} - %msg%n"/>
<!--    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%-5t] [%X{EagleEye-TraceID}] [%logger{36}:%L] %m%n"/>-->

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="filelog"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FOLDER}/${springAppName}/${springAppName}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_FOLDER}/${springAppName}/root/${springAppName}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 6 days worth of history-->
            <maxFileSize>300MB</maxFileSize>
            <!--历史文件保留个数-->
            <maxHistory>2</maxHistory>
            <!--日志文件最大量 10G-->
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name ="asyncFile" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="filelog"/>
    </appender>

<!--
    <logger name="com.netflix.loadbalancer" level="DEBUG" additivity="false">
        <appender-ref ref="console"></appender-ref>
    </logger>
-->

    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
        </root>
    </springProfile>

    <springProfile name="sit">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
        </root>
    </springProfile>

    <springProfile name="pre">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
        </root>
    </springProfile>

    <springProfile name="stressing">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
        </root>
    </springProfile>

    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
        </root>
    </springProfile>

</configuration>
